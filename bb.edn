 {:tasks
  {:init (def extra-env {"PATH" (str "target/bin:test/fixtures/bin:" (System/getenv "PATH"))})

   test:once
   {:doc  "runs tests"
    :task (clojure {:dir "."
                    :extra-env extra-env}
                   "-M:test")}

   test
   {:doc  "runs tests in watch mode"
    :task (clojure {:dir "."
                    :extra-env extra-env}
                   "-M:test --watch")}

   test:coverage
   {:doc "generate test coverage report"
    :task (clojure {:extra-env extra-env}
                   "-M:test:coverage")}

   update-readme-help
   {:doc "Update README.md with help output"
    :requires [[clojure.string :as str]
               [babashka.process :refer [sh]]
               [babashka.fs :as fs]]
    :task (let [help-output (:out (sh "bin/firewrap" "--help"))]
            (fs/update-file
             "README.md"
             (fn [content]
               (str/replace content
                            (re-pattern "(<!-- FIREWRAP_HELP_BEGIN -->)[\\s\\S]*?(<!-- /FIREWRAP_HELP_END -->)")
                            (str "$1\n```\n" help-output "```\n$2")))))}

   docs
   {:doc "Generate documentation"
    :depends [update-readme-help]
    :extra-deps {io.github.borkdude/quickdoc {:git/tag "v0.2.5", :git/sha "25784ca"}}
    :task (exec 'quickdoc.api/quickdoc)
    :exec-args {:git/branch "master"
                :github/repo "https://github.com/dundalek/firewrap"
                :source-paths ["src"]
                :outfile "doc/API.md"}}

   compile-strace-parser
   {:task
    (do
      (shell "bun install b3-strace-parser")
      (shell "mkdir -p target/bin")
      (shell "bun build node_modules/b3-strace-parser/cli.js --compile --outfile target/bin/b3-strace-parser"))}}}
